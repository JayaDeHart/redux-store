{"version":3,"sources":["redux/categories.js","redux/cart.js","components/Products.js","components/Categories.js","components/Footer.js","components/Cart.js","components/ActiveCategory.js","components/Header.js","App.js","redux/products.js","redux/index.js","index.js"],"names":["initialState","categories","name","displayName","description","activeCategory","cart","mapDispatchToProps","addCart","product","type","payload","connect","state","products","productReducer","displayProducts","props","map","Card","className","sx","minWidth","CardContent","Typography","fontSize","color","gutterBottom","variant","CardActions","Button","onClick","size","price","changeCategory","category","categoryReducer","ButtonGroup","Footer","removeCart","cartReducer","length","IconButton","component","flexGrow","style","paddingLeft","Header","useState","anchor","setAnchor","open","setOpen","AppBar","Toolbar","e","currentTarget","Popper","anchorEl","placement","App","reducers","combineReducers","action","filtered","filter","newCart","item","store","createStore","composeWithDevTools","Entry","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d44aa640.chunk.js","sourcesContent":["let initialState = {\n  categories: [\n    {\n      name: 'clothes',\n      displayName: 'Apparel',\n      description: 'Shop our wide variety of fits and styles',\n    },\n    {\n      name: 'electronics',\n      displayName: 'Electronics',\n      description: 'Shop tech',\n    },\n    {\n      name: 'prints',\n      displayName: 'Prints',\n      description: 'Buy custom prints',\n    },\n  ],\n  activeCategory: 'clothes',\n};\n\nexport function changeCategory(category) {\n  return {\n    type: 'CHANGE',\n    payload: category,\n  };\n}\n\nexport default (state = initialState, action) => {\n  let { type, payload } = action;\n  //only one case for now\n  switch (type) {\n    case 'CHANGE':\n      return { ...state, activeCategory: payload };\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  cart: [],\n};\n\nexport default function cartReducer(state = initialState, action) {\n  let { type, payload } = action;\n  switch (type) {\n    case 'ADD_CART':\n      return { cart: [...state.cart, payload] };\n    case 'REMOVE_CART':\n      let newCart = state.cart.filter((item) => item.name != payload.name);\n      return { cart: newCart };\n    default:\n      return state;\n  }\n}\n\nexport function addCart(product) {\n  return {\n    type: 'ADD_CART',\n    payload: product,\n  };\n}\n\nexport function removeCart(product) {\n  return {\n    type: 'REMOVE_CART',\n    payload: product,\n  };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Button,\n} from '@mui/material';\nimport './products.scss';\nimport { addCart } from '../redux/cart';\n\nexport const Products = (props) => {\n  return (\n    <div>\n      {props.products.map((product) => {\n        return (\n          <Card key={product.name} className=\"product\" sx={{ minWidth: 275 }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 14 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                {product.name}\n              </Typography>\n              <Typography variant=\"body2\">{product.description}</Typography>\n            </CardContent>\n            <CardActions>\n              <Button\n                onClick={() => {\n                  props.addCart(product);\n                }}\n                size=\"small\"\n              >\n                Add to cart\n              </Button>\n              <Typography variant=\"body2\">${product.price}.00 </Typography>\n            </CardActions>\n          </Card>\n        );\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  products: state.productReducer.displayProducts,\n});\n\nconst mapDispatchToProps = { addCart };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeCategory } from '../redux/categories';\nimport '../app.scss';\nimport { Button, ButtonGroup } from '@mui/material';\nimport Products from './Products';\n\nfunction Categories(props) {\n  return (\n    <div className=\"main\">\n      <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n        {props.categories.map((category) => (\n          <Button\n            key={category.name}\n            onClick={() => {\n              props.changeCategory(category.name);\n            }}\n          >\n            {category.displayName}\n          </Button>\n        ))}\n      </ButtonGroup>\n      <Products />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  categories: state.categoryReducer.categories,\n});\n\nconst mapDispatchToProps = { changeCategory };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\n","import React from 'react';\nimport '../app.scss';\n\nfunction Footer() {\n  return <div className=\"footer\">Copyright Jaya DeHart 2021</div>;\n}\n\nexport default Footer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { removeCart } from '../redux/cart';\nimport { Card, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport './cart.scss';\n\nexport const Cart = (props) => {\n  return (\n    <Card className=\"cart\">\n      {props.cart.length < 1 && <div>Your cart is empty!</div>}\n      {props.cart.map((product) => (\n        <div className=\"cart-item\">\n          {product.name}\n          <IconButton\n            size=\"small\"\n            color=\"error\"\n            onClick={() => {\n              props.removeCart(product);\n            }}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </div>\n      ))}\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  cart: state.cartReducer.cart,\n});\n\nconst mapDispatchToProps = {\n  removeCart,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Typography } from '@mui/material';\n\nfunction ActiveCategory(props) {\n  return (\n    <Typography\n      variant=\"h6\"\n      component=\"div\"\n      sx={{ flexGrow: 1 }}\n      style={{ paddingLeft: '10px' }}\n    >\n      | Shopping: {props.activeCategory}\n    </Typography>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  activeCategory: state.categoryReducer.activeCategory,\n});\n\nexport default connect(mapStateToProps)(ActiveCategory);\n","import React, { useState, useRef } from 'react';\nimport { AppBar, Toolbar, Typography, Popper, Button } from '@mui/material';\nimport Cart from './Cart';\nimport ActiveCategory from './ActiveCategory';\nimport '../app.scss';\n\nfunction Header() {\n  const [anchor, setAnchor] = useState(null);\n\n  const [open, setOpen] = useState(false);\n\n  function togglePopper(e) {\n    setAnchor(e.currentTarget);\n    setOpen(!open);\n  }\n\n  return (\n    <AppBar className=\"header\">\n      <Toolbar variant=\"dense\">\n        <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\n          Shop Till You Drop\n        </Typography>\n        <ActiveCategory />\n        <Button variant=\"contained\" color=\"secondary\" onClick={togglePopper}>\n          Cart\n        </Button>\n        <Popper open={open} anchorEl={anchor} placement=\"bottom\">\n          <Cart />\n        </Popper>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import './app.scss';\nimport Categories from './components/Categories.js';\nimport Footer from './components/Footer.js';\nimport Header from './components/Header.js';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Categories />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","let initialState = {\n  products: [\n    {\n      name: 'Iphone 1',\n      description: 'The revolutionary product envisioned by Steve Jobs',\n      price: 100,\n      category: 'electronics',\n    },\n    {\n      name: 'FitBit',\n      description: 'Count your steps',\n      price: 200,\n      category: 'electronics',\n    },\n    {\n      name: 'White T Shirt',\n      description: 'Designed by Kanye West',\n      price: 400,\n      category: 'clothes',\n    },\n    {\n      name: 'Jordan Retro 4s',\n      description: 'Pretty fly',\n      price: 150,\n      category: 'clothes',\n    },\n    {\n      name: 'Canvas Print',\n      description: 'Print a custom picture on this canvas sheet',\n      price: 15,\n      category: 'prints',\n    },\n    {\n      name: 'Photo Paper Print',\n      description: 'Print a custom picture on this glossy photo paper',\n      price: 20,\n      category: 'prints',\n    },\n  ],\n  displayProducts: [\n    {\n      name: 'Iphone 1',\n      description: 'The revolutionary product envisioned by Steve Jobs',\n      price: 100,\n      category: 'electronics',\n    },\n    {\n      name: 'FitBit',\n      description: 'Count your steps',\n      price: 200,\n      category: 'electronics',\n    },\n    {\n      name: 'White T Shirt',\n      description: 'Designed by Kanye West',\n      price: 400,\n      category: 'clothes',\n    },\n    {\n      name: 'Jordan Retro 4s',\n      description: 'Pretty fly',\n      price: 150,\n      category: 'clothes',\n    },\n    {\n      name: 'Canvas Print',\n      description: 'Print a custom picture on this canvas sheet',\n      price: 15,\n      category: 'prints',\n    },\n    {\n      name: 'Photo Paper Print',\n      description: 'Print a custom picture on this glossy photo paper',\n      price: 20,\n      category: 'prints',\n    },\n  ],\n};\n\nexport default (state = initialState, action) => {\n  let { type, payload } = action;\n\n  switch (type) {\n    case 'CHANGE':\n      let filtered = state.products.filter(\n        (product) => product.category === payload\n      );\n      return { ...state, displayProducts: filtered };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers } from 'redux';\nimport categoryReducer from './categories';\nimport productReducer from './products';\nimport cartReducer from './cart';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nlet reducers = combineReducers({\n  categoryReducer,\n  productReducer,\n  cartReducer,\n});\n\nfunction store() {\n  return createStore(reducers, composeWithDevTools());\n}\n\nexport default store();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/index';\nimport { Provider } from 'react-redux';\n\nfunction Entry() {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n}\n\nReactDOM.render(<Entry />, document.getElementById('root'));\n"],"sourceRoot":""}