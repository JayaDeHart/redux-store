{"version":3,"sources":["redux/categories.js","redux/cart.js","components/Products.js","components/Categories.js","components/Footer.js","components/Cart.js","components/ActiveCategory.js","components/Header.js","App.js","redux/products.js","redux/index.js","index.js"],"names":["initialState","categories","name","displayName","description","activeCategory","cart","mapDispatchToProps","addCart","product","type","payload","connect","state","products","productReducer","props","console","log","filter","display","map","Card","className","sx","minWidth","CardContent","Typography","fontSize","color","gutterBottom","variant","CardActions","Button","onClick","size","price","stock","changeCategory","category","categoryReducer","ButtonGroup","Footer","removeCart","cartReducer","length","IconButton","key","component","flexGrow","style","paddingLeft","Header","useState","anchor","setAnchor","open","setOpen","AppBar","Toolbar","e","currentTarget","Popper","anchorEl","placement","App","reducers","combineReducers","action","updated","subtracted","added","individual","uuidv4","newCart","item","store","createStore","composeWithDevTools","Entry","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6534508e.chunk.js","sourcesContent":["let initialState = {\n  categories: [\n    {\n      name: 'clothes',\n      displayName: 'Apparel',\n      description: 'Shop our wide variety of fits and styles',\n    },\n    {\n      name: 'electronics',\n      displayName: 'Electronics',\n      description: 'Shop tech',\n    },\n    {\n      name: 'prints',\n      displayName: 'Prints',\n      description: 'Buy custom prints',\n    },\n  ],\n  activeCategory: 'clothes',\n};\n\nexport function changeCategory(category) {\n  return {\n    type: 'CHANGE',\n    payload: category,\n  };\n}\n\nexport default (state = initialState, action) => {\n  let { type, payload } = action;\n  //only one case for now\n  switch (type) {\n    case 'CHANGE':\n      return { ...state, activeCategory: payload };\n    default:\n      return state;\n  }\n};\n","import { v4 as uuidv4 } from 'uuid';\n\nconst initialState = {\n  cart: [],\n};\n\nexport default function cartReducer(state = initialState, action) {\n  let { type, payload } = action;\n  switch (type) {\n    case 'ADD_CART':\n      let individual = {\n        ...payload,\n        key: uuidv4(),\n      };\n      return { cart: [...state.cart, individual] };\n    case 'REMOVE_CART':\n      let newCart = state.cart.filter((item) => item.key !== payload.key);\n      return { cart: newCart };\n    default:\n      return state;\n  }\n}\n\nexport function addCart(product) {\n  return {\n    type: 'ADD_CART',\n    payload: product,\n  };\n}\n\nexport function removeCart(product) {\n  return {\n    type: 'REMOVE_CART',\n    payload: product,\n  };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Button,\n} from '@mui/material';\nimport './products.scss';\nimport { addCart } from '../redux/cart';\n\nexport const Products = (props) => {\n  console.log(props.products);\n  return (\n    <div>\n      {props.products\n        .filter((product) => product.display)\n        .map((product) => {\n          return (\n            <Card key={product.name} className=\"product\" sx={{ minWidth: 275 }}>\n              <CardContent>\n                <Typography\n                  sx={{ fontSize: 14 }}\n                  color=\"text.secondary\"\n                  gutterBottom\n                >\n                  {product.name}\n                </Typography>\n                <Typography variant=\"body2\">{product.description}</Typography>\n              </CardContent>\n              <CardActions>\n                <Button\n                  onClick={() => {\n                    props.addCart(product);\n                  }}\n                  size=\"small\"\n                >\n                  Add to cart\n                </Button>\n                <Typography variant=\"body2\">${product.price}.00 </Typography>\n                <Typography variant=\"body2\">Stock: {product.stock} </Typography>\n              </CardActions>\n            </Card>\n          );\n        })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  products: state.productReducer.products,\n});\n\nconst mapDispatchToProps = { addCart };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeCategory } from '../redux/categories';\nimport '../app.scss';\nimport { Button, ButtonGroup } from '@mui/material';\nimport Products from './Products';\n\nfunction Categories(props) {\n  return (\n    <div className=\"main\">\n      <ButtonGroup variant=\"text\" aria-label=\"text button group\">\n        {props.categories.map((category) => (\n          <Button\n            key={category.name}\n            onClick={() => {\n              props.changeCategory(category.name);\n            }}\n          >\n            {category.displayName}\n          </Button>\n        ))}\n      </ButtonGroup>\n      <Products />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  categories: state.categoryReducer.categories,\n});\n\nconst mapDispatchToProps = { changeCategory };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\n","import React from 'react';\nimport '../app.scss';\n\nfunction Footer() {\n  return <div className=\"footer\">Copyright Jaya DeHart 2021</div>;\n}\n\nexport default Footer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { removeCart } from '../redux/cart';\nimport { Card, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport './cart.scss';\n\nexport const Cart = (props) => {\n  return (\n    <Card className=\"cart\">\n      {props.cart.length < 1 && <div>Your cart is empty!</div>}\n      {props.cart.map((product) => (\n        <div key={product.key} className=\"cart-item\">\n          {product.name}\n          <IconButton\n            size=\"small\"\n            color=\"error\"\n            onClick={() => {\n              props.removeCart(product);\n            }}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </div>\n      ))}\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  cart: state.cartReducer.cart,\n});\n\nconst mapDispatchToProps = {\n  removeCart,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Typography } from '@mui/material';\n\nfunction ActiveCategory(props) {\n  return (\n    <Typography\n      variant=\"h6\"\n      component=\"div\"\n      sx={{ flexGrow: 1 }}\n      style={{ paddingLeft: '10px' }}\n    >\n      | Shopping: {props.activeCategory}\n    </Typography>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  activeCategory: state.categoryReducer.activeCategory,\n});\n\nexport default connect(mapStateToProps)(ActiveCategory);\n","import React, { useState, useRef } from 'react';\nimport { AppBar, Toolbar, Typography, Popper, Button } from '@mui/material';\nimport Cart from './Cart';\nimport ActiveCategory from './ActiveCategory';\nimport '../app.scss';\n\nfunction Header() {\n  const [anchor, setAnchor] = useState(null);\n\n  const [open, setOpen] = useState(false);\n\n  function togglePopper(e) {\n    setAnchor(e.currentTarget);\n    setOpen(!open);\n  }\n\n  return (\n    <AppBar className=\"header\">\n      <Toolbar variant=\"dense\">\n        <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\n          Shop Till You Drop\n        </Typography>\n        <ActiveCategory />\n        <Button variant=\"contained\" color=\"secondary\" onClick={togglePopper}>\n          Cart\n        </Button>\n        <Popper open={open} anchorEl={anchor} placement=\"bottom\">\n          <Cart />\n        </Popper>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import './app.scss';\nimport Categories from './components/Categories.js';\nimport Footer from './components/Footer.js';\nimport Header from './components/Header.js';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Categories />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","let initialState = {\n  products: [\n    {\n      name: 'Iphone 1',\n      description: 'The revolutionary product envisioned by Steve Jobs',\n      price: 100,\n      category: 'electronics',\n      stock: 10,\n      display: true,\n    },\n    {\n      name: 'FitBit',\n      description: 'Count your steps',\n      price: 200,\n      category: 'electronics',\n      stock: 10,\n      display: true,\n    },\n    {\n      name: 'White T Shirt',\n      description: 'Designed by Kanye West',\n      price: 400,\n      category: 'clothes',\n      stock: 10,\n      display: true,\n    },\n    {\n      name: 'Jordan Retro 4s',\n      description: 'Pretty fly',\n      price: 150,\n      category: 'clothes',\n      stock: 10,\n      display: true,\n    },\n    {\n      name: 'Canvas Print',\n      description: 'Print a custom picture on this canvas sheet',\n      price: 15,\n      category: 'prints',\n      stock: 10,\n      display: true,\n    },\n    {\n      name: 'Photo Paper Print',\n      description: 'Print a custom picture on this glossy photo paper',\n      price: 20,\n      category: 'prints',\n      stock: 10,\n      display: true,\n    },\n  ],\n};\n\nexport default (state = initialState, action) => {\n  let { type, payload } = action;\n  switch (type) {\n    case 'CHANGE':\n      let updated = state.products.map((product) => {\n        if (product.category !== payload) {\n          product.display = false;\n          return product;\n        } else {\n          product.display = true;\n          return product;\n        }\n      });\n      return { ...state, products: updated };\n    case 'ADD_CART':\n      let subtracted = state.products.map((product) => {\n        if (product.name == payload.name) {\n          product.stock -= 1;\n          return product;\n        } else {\n          return product;\n        }\n      });\n      return { ...state, products: subtracted };\n    case 'REMOVE_CART':\n      let added = state.products.map((product) => {\n        if (product.name == payload.name) {\n          product.stock += 1;\n          return product;\n        } else {\n          return product;\n        }\n      });\n      return { ...state, products: added };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers } from 'redux';\nimport categoryReducer from './categories';\nimport productReducer from './products';\nimport cartReducer from './cart';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nlet reducers = combineReducers({\n  categoryReducer,\n  productReducer,\n  cartReducer,\n});\n\nfunction store() {\n  return createStore(reducers, composeWithDevTools());\n}\n\nexport default store();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/index';\nimport { Provider } from 'react-redux';\n\nfunction Entry() {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n}\n\nReactDOM.render(<Entry />, document.getElementById('root'));\n"],"sourceRoot":""}